<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: DSL | Grygoriy Mykhalyuno]]></title>
  <link href="http://grygoriy.github.io/blog/categories/dsl/atom.xml" rel="self"/>
  <link href="http://grygoriy.github.io/"/>
  <updated>2013-10-12T12:04:56+03:00</updated>
  <id>http://grygoriy.github.io/</id>
  <author>
    <name><![CDATA[Grygoriy Mykhalyuno]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Awesomeness of groovy named parameters]]></title>
    <link href="http://grygoriy.github.io/blog/2012/02/13/awesomeness-of-groovy-named-parameters/"/>
    <updated>2012-02-13T18:33:00+02:00</updated>
    <id>http://grygoriy.github.io/blog/2012/02/13/awesomeness-of-groovy-named-parameters</id>
    <content type="html"><![CDATA[<p>How do you call typical method with few parameters. Lets assume we have method that sends email with signature<br /> <div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'> <span class="n">send</span><span class="o">(</span><span class="n">String</span> <span class="n">from</span><span class="o">,</span> <span class="n">String</span> <span class="n">to</span><span class="o">,</span> <span class="n">String</span> <span class="n">subject</span><span class="o">,</span> <span class="n">String</span> <span class="n">body</span><span class="o">)</span> <span class="o">{</span> <span class="n">println</span> <span class="o">&amp;</span><span class="err">#</span><span class="mi">8220</span><span class="o">;</span><span class="n">sender</span> <span class="n">$</span><span class="o">{</span><span class="n">from</span><span class="o">}&amp;</span><span class="err">#</span><span class="mi">8221</span><span class="o">;</span> <span class="n">println</span> <span class="o">&amp;</span><span class="err">#</span><span class="mi">8220</span><span class="o">;</span><span class="n">sender</span> <span class="n">$</span><span class="o">{</span><span class="n">to</span><span class="o">}&amp;</span><span class="err">#</span><span class="mi">8221</span><span class="o">;</span> <span class="n">println</span> <span class="o">&amp;</span><span class="err">#</span><span class="mi">8220</span><span class="o">;</span><span class="n">sender</span> <span class="n">$</span><span class="o">{</span><span class="n">subject</span><span class="o">}&amp;</span><span class="err">#</span><span class="mi">8221</span><span class="o">;</span> <span class="n">println</span> <span class="o">&amp;</span><span class="err">#</span><span class="mi">8220</span><span class="o">;</span><span class="n">sender</span> <span class="n">$</span><span class="o">{</span><span class="n">body</span><span class="o">}&amp;</span><span class="err">#</span><span class="mi">8221</span><span class="o">;</span> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div> typical java call would be <div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'> <span class="n">send</span><span class="o">(&amp;</span><span class="err">#</span><span class="mi">8220</span><span class="o">;</span><span class="n">john</span><span class="nd">@example.com</span><span class="o">&amp;</span><span class="err">#</span><span class="mi">8221</span><span class="o">;,</span> <span class="o">&amp;</span><span class="err">#</span><span class="mi">8220</span><span class="o">;</span><span class="n">mike</span><span class="nd">@example.com</span><span class="o">&amp;</span><span class="err">#</span><span class="mi">8221</span><span class="o">;,</span> <span class="o">&amp;</span><span class="err">#</span><span class="mi">8220</span><span class="o">;</span><span class="n">greetings</span><span class="o">&amp;</span><span class="err">#</span><span class="mi">8221</span><span class="o">;,</span> <span class="o">&amp;</span><span class="err">#</span><span class="mi">8220</span><span class="o">;</span><span class="n">Hello</span> <span class="n">Goodbye</span><span class="o">&amp;</span><span class="err">#</span><span class="mi">8221</span><span class="o">;)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Too many strings, don&#8217;t you think? I have to check java docs all the time I&#8217;m writing this method.<br /> Groovy allows us to pass parameters as map without <span />. If we pass map into method groovy set it to the first parameter. Let&#8217;s look into other exampl</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'> <span class="n">send</span> <span class="nl">from:</span><span class="o">&amp;</span><span class="err">#</span><span class="mi">8221</span><span class="o">;</span><span class="n">john</span><span class="nd">@example.com</span><span class="o">&amp;</span><span class="err">#</span><span class="mi">8221</span><span class="o">;,</span> <span class="nl">to:</span><span class="o">&amp;</span><span class="err">#</span><span class="mi">8221</span><span class="o">;</span><span class="n">mike</span><span class="nd">@example.com</span><span class="o">&amp;</span><span class="err">#</span><span class="mi">8221</span><span class="o">;,</span> <span class="nl">subject:</span><span class="o">&amp;</span><span class="err">#</span><span class="mi">8221</span><span class="o">;</span><span class="n">greetings</span><span class="o">&amp;</span><span class="err">#</span><span class="mi">8221</span><span class="o">;,</span> <span class="nl">body:</span><span class="o">&amp;</span><span class="err">#</span><span class="mi">8221</span><span class="o">;</span><span class="n">Hello</span> <span class="n">Goodbye</span><span class="o">&amp;</span><span class="err">#</span><span class="mi">8221</span><span class="o">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div> Much more readable as for me. And method will looks like <div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'> <span class="n">send</span><span class="o">(</span><span class="n">params</span><span class="o">)</span> <span class="o">{</span> <span class="n">println</span> <span class="o">&amp;</span><span class="err">#</span><span class="mi">8220</span><span class="o">;</span><span class="n">sender</span> <span class="n">$</span><span class="o">{</span><span class="n">params</span><span class="o">.</span><span class="na">from</span><span class="o">}&amp;</span><span class="err">#</span><span class="mi">8221</span><span class="o">;</span> <span class="n">println</span> <span class="o">&amp;</span><span class="err">#</span><span class="mi">8220</span><span class="o">;</span><span class="n">sender</span> <span class="n">$</span><span class="o">{</span><span class="n">params</span><span class="o">.</span><span class="na">to</span><span class="o">}&amp;</span><span class="err">#</span><span class="mi">8221</span><span class="o">;</span> <span class="n">println</span> <span class="o">&amp;</span><span class="err">#</span><span class="mi">8220</span><span class="o">;</span><span class="n">sender</span> <span class="n">$</span><span class="o">{</span><span class="n">params</span><span class="o">.</span><span class="na">subject</span><span class="o">}&amp;</span><span class="err">#</span><span class="mi">8221</span><span class="o">;</span> <span class="n">println</span> <span class="o">&amp;</span><span class="err">#</span><span class="mi">8220</span><span class="o">;</span><span class="n">sender</span> <span class="n">$</span><span class="o">{</span><span class="n">params</span><span class="o">.</span><span class="na">body</span><span class="o">}&amp;</span><span class="err">#</span><span class="mi">8221</span><span class="o">;</span> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>]]></content>
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: DSL | Grygoriy Mykhalyuno]]></title>
  <link href="http://grygoriy.github.io/blog/categories/dsl/atom.xml" rel="self"/>
  <link href="http://grygoriy.github.io/"/>
  <updated>2013-10-12T01:02:37+03:00</updated>
  <id>http://grygoriy.github.io/</id>
  <author>
    <name><![CDATA[Grygoriy Mykhalyuno]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Awesomeness of groovy named parameters]]></title>
    <link href="http://grygoriy.github.io/blog/2012/02/13/awesomeness-of-groovy-named-parameters/"/>
    <updated>2012-02-13T18:33:00+02:00</updated>
    <id>http://grygoriy.github.io/blog/2012/02/13/awesomeness-of-groovy-named-parameters</id>
    <content type="html"><![CDATA[<p>How do you call typical method with few parameters. Lets assume we have method that sends email with signature<br /> {% codeblock lang:groovy %} send(String from, String to, String subject, String body) { println &#8220;sender ${from}&#8221; println &#8220;sender ${to}&#8221; println &#8220;sender ${subject}&#8221; println &#8220;sender ${body}&#8221; } {% endcodeblock %} typical java call would be {% codeblock lang:groovy %} send(&#8220;john@example.com&#8221;, &#8220;mike@example.com&#8221;, &#8220;greetings&#8221;, &#8220;Hello Goodbye&#8221;) {% endcodeblock %}</p>

<p>Too many strings, don&#8217;t you think? I have to check java docs all the time I&#8217;m writing this method.<br /> Groovy allows us to pass parameters as map without <span />. If we pass map into method groovy set it to the first parameter. Let&#8217;s look into other exampl</p>

<p>{% codeblock lang:groovy %} send from:&#8221;john@example.com&#8221;, to:&#8221;mike@example.com&#8221;, subject:&#8221;greetings&#8221;, body:&#8221;Hello Goodbye&#8221; {% endcodeblock %} Much more readable as for me. And method will looks like {% codeblock lang:groovy %} send(params) { println &#8220;sender ${params.from}&#8221; println &#8220;sender ${params.to}&#8221; println &#8220;sender ${params.subject}&#8221; println &#8220;sender ${params.body}&#8221; } {% endcodeblock %}</p>]]></content>
  </entry>
  
</feed>

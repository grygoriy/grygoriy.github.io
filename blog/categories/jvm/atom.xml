<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: JVM | Grygoriy Mykhalyuno]]></title>
  <link href="http://grygoriy.github.io/blog/categories/jvm/atom.xml" rel="self"/>
  <link href="http://grygoriy.github.io/"/>
  <updated>2014-05-22T20:24:30+02:00</updated>
  <id>http://grygoriy.github.io/</id>
  <author>
    <name><![CDATA[Grygoriy Mykhalyuno]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Grails schema-export]]></title>
    <link href="http://grygoriy.github.io/blog/2010/08/27/grails-schema-export/"/>
    <updated>2010-08-27T16:40:00+02:00</updated>
    <id>http://grygoriy.github.io/blog/2010/08/27/grails-schema-export</id>
    <content type="html"><![CDATA[<p>Для себе виявив цікавий скрипт у грейлс
<em>grails schema-export</em></p>

<p>Власне все що він робить &ndash; це генерує скрипт на основі мапінгів доменних класів. Правду кажучи я люблю сам писаті але кілька роз довелось будувати вручну на основі існоючої системи і тоді дуже би знадобився. Але як то кажуть, досвід це та річ яка прихоить коли ти вже все зробив :)</p>

<p>Якщо виконати
<em>grails schema-export</em>
то схема бази даних буде екпортована у target/ddl.sql
Можна екпортувати окремі доменні класи
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>grails schema-export com.User</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
